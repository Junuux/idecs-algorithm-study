### 삽입 정렬(insertion sort)
## 필요할 때만 위치를 바꾸므로 데이터가 거의 정렬되어 있을 때 효율적.
## 특정한 데이터가 적절한 위치에 들어가기 이전에, 그 앞까지의 데이터는 이미 정렬되어 있다고 가정
## 삽입될 데이터보다 작은 데이터를 만나면 그 위치에서 멈추면 된다

array = [7, 5, 9, 0, 3, 1, 6, 2, 4, 8]

for i in range(1, len(array)):   # 첫 번째 원소는 이미 정렬된 것으로 보기 때문에 두 번째부터 시작!
    for j in range(i, 0, -1):  # 인덱스 i부터 1까지 감소하며 반복하는 문법
        if array[j] < array[j-1]:  # 한 칸씩 왼쪽으로 이동. 오른쪽이 더 작은 경우!
            array[j], array[j-1] = array[j-1], array[j]
        else:  # 자기보다 작은 데이터를 만나면 그 위치에서 멈춤
            break

print(array)


## 삽입 정렬의 시간 복잡도는 O(N^2). 반복문이 2번 중첩되어 사용되었기 때문
## 현재 리스트의 데이터가 거의 정렬되어 있는 경우 매우 빠르게 동작한다. 최선의 경우 O(N)의 시간 복잡도를 가짐